<launch>
  
  <!--  Transforms  -->
  <!--node type="odometry" pkg="localization" name="odometry" output="screen">
  </node-->

  <node type="imu_tf_adapter" pkg="localization" name="imu_adapter" output="screen">
  </node>

  <node type="gps_pose.py" pkg="geodesy" name="gps_pose_converter" output="screen">
      <param name="~file_path" value="$(find geodesy)/geodesy_data/gps_coarse_points/student_union_straight.txt" />
  </node>
  
  <include file="$(find robot_localization)/launch/ekf_template.launch" />
  
  <!--
  <node type="imu_tf_adapter" pkg="localization" name="imu_tf_adapter" output="screen">
    </node>
  <rosparam command="load" file="$(find robot_localization)/params/dual_ekf_navsat_example.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true"/>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>
  -->
</launch>